Introducting Inheritance --------------------------------------------------->
Important terms: superclass, subclass
    > The object-oriented principle of inheritance saves us the headache of 
    redefining the same class members all over again. 

    > Parent class, superclass, and base class - refer to the class that 
    another class inherits from 
    > Child class, subclass, and derived class - refer to a class that 
    inherits from another class  


Inheritance in Practice ---------------------------------------------------->
    > In order to define a child class where it inherits from a parent class, 
    you need to use the keyword 'extends'.

    > When we use inheritance to extend a subclass from a superclass, we 
    create an 'is-a' relationship from the subclass to the superclass. 

    > Most Java programs utilize multiple classes, each of which requires its 
    own file. Only one file needs a main() method. 


Inheriting the Constructor ------------------------------------------------->
    > The super() method acts like the parent constructor inside the child 
    class constructor. 

    > If you're writing a constructor of a child class, and don't explicitly
    make a call to a constructor from a parent class using super, Java will 
    automatically and secretly call super() as the first line of your child
    class constructor. 